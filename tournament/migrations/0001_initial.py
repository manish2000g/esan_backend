# Generated by Django 4.2 on 2023-05-11 09:09

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0007_userprofile_discord_link_userprofile_facebook_link_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(auto_now=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.organizer')),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_platform', models.CharField(choices=[('Mobile', 'Mobile'), ('Console', 'Console'), ('PC', 'PC')], max_length=15)),
                ('name', models.CharField(max_length=300)),
                ('game_mode', models.CharField(choices=[('Online', 'Online'), ('Physical', 'Physical')], max_length=10)),
                ('description', ckeditor.fields.RichTextField()),
                ('location', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('elimination_mode', models.CharField(choices=[('Single', 'Single'), ('Double', 'Double'), ('None', 'None')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_number', models.IntegerField()),
                ('number_of_rounds', models.PositiveBigIntegerField()),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.game')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('captain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='captain_of', to='account.player')),
                ('members', models.ManyToManyField(blank=True, related_name='member_of', to='account.player')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='account.organization')),
                ('team_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_of', to='account.player')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', ckeditor.fields.RichTextField()),
                ('registration_start_date', models.DateTimeField()),
                ('registration_end_date', models.DateTimeField()),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(auto_now=True)),
                ('entry_fee', models.DecimalField(decimal_places=2, max_digits=8)),
                ('participant_type', models.CharField(choices=[('Solo', 'Solo'), ('Duo', 'Duo'), ('Squad', 'Squad')], max_length=10)),
                ('tournament_type', models.CharField(choices=[('Single Elimination', 'Single Elimination'), ('Double Elimination', 'Double Elimination'), ('League', 'League'), ('Battle Royal', 'Battle Royal')], max_length=20)),
                ('number_of_participants', models.PositiveBigIntegerField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.event')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentBracket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_rounds', models.PositiveSmallIntegerField()),
                ('rounds_per_match', models.IntegerField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('number_of_teams', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('loser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lost_brackets', to='tournament.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brackets', to='tournament.tournament')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_brackets', to='tournament.team')),
            ],
            options={
                'ordering': ['number_of_rounds'],
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('Completed', 'Completed'), ('Ongoing', 'Ongoing')], max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(related_name='groups', to='tournament.group')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.ImageField(null=True, upload_to='sponsor_logos/')),
                ('type', models.CharField(choices=[('title', 'Title Sponsor'), ('presenting', 'Presenting Sponsor'), ('official', 'Official Sponsor'), ('media', 'Media Partner'), ('support', 'Support Sponsor'), ('technical', 'Technical Sponsor'), ('gaming', 'Gaming Partner'), ('food_and_beverages', 'Food and Beverages Sponsor'), ('venue', 'Venue Sponsor'), ('merchandise', 'Merchandise Partner'), ('broadcast', 'Broadcast Partner')], max_length=40)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsor', to='tournament.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(auto_now=True)),
                ('venue', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.match')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('bracket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournamentbracket')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(choices=[('Team_1', 'Team 1 wins'), ('Team_2', 'Team 2 wins'), ('Draw', 'Draw')], max_length=10)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_result', to='tournament.match')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='tournament.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('Esewa', 'Esewa'), ('Khalti', 'Khalti'), ('Card', 'Card')], max_length=20)),
                ('amount', models.FloatField()),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.CharField(blank=True, max_length=400)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='PrizePool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('extras', models.CharField(blank=True, max_length=100)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.player')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='team_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_team_1', to='tournament.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_team_2', to='tournament.team'),
        ),
        migrations.CreateModel(
            name='LivePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('chat_url', models.URLField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.game')),
                ('tournament', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='bracket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournamentbracket'),
        ),
        migrations.AddField(
            model_name='group',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.team'),
        ),
        migrations.AddField(
            model_name='group',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament'),
        ),
        migrations.AddField(
            model_name='game',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament'),
        ),
        migrations.CreateModel(
            name='BannerImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='tournament_banners/')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.event')),
            ],
        ),
    ]
